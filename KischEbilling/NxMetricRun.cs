//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KischEbilling
{
    using System;
    using System.Collections.Generic;
    
    public partial class NxMetricRun
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public NxMetricRun()
        {
            this.BalHistMetricRuns = new HashSet<BalHistMetricRun>();
            this.BalMetricRunChilds = new HashSet<BalMetricRunChild>();
            this.MxAAGBalancings = new HashSet<MxAAGBalancing>();
            this.MxAAGBalancings1 = new HashSet<MxAAGBalancing>();
            this.MxAAGBalancings2 = new HashSet<MxAAGBalancing>();
            this.MxAAGBalancings3 = new HashSet<MxAAGBalancing>();
            this.MxAAGBalancings4 = new HashSet<MxAAGBalancing>();
            this.MxAAGBalancingRuns = new HashSet<MxAAGBalancingRun>();
            this.MxAAGBalancingRuns1 = new HashSet<MxAAGBalancingRun>();
            this.MxAAGBalancingRuns2 = new HashSet<MxAAGBalancingRun>();
            this.MxAAGBalancingRuns3 = new HashSet<MxAAGBalancingRun>();
            this.MxAAGBalancingRuns4 = new HashSet<MxAAGBalancingRun>();
            this.MxApBalancingRuns = new HashSet<MxApBalancingRun>();
            this.MxArBalancingRuns = new HashSet<MxArBalancingRun>();
            this.MxTrustBalancingRuns = new HashSet<MxTrustBalancingRun>();
            this.MxWipBalancingRuns = new HashSet<MxWipBalancingRun>();
        }
    
        public System.Guid NxMetricRunID { get; set; }
        public int RunIndex { get; set; }
        public System.Guid MetricID { get; set; }
        public Nullable<byte> IsRunComplete { get; set; }
        public string DbConfigItem { get; set; }
        public string Description { get; set; }
        public string ParamObject { get; set; }
        public string GroupRunIndexes { get; set; }
        public Nullable<System.DateTime> StartTime { get; set; }
        public string NetworkAlias { get; set; }
        public string MachineName { get; set; }
        public string MetricCurrency { get; set; }
        public string MetricTableName { get; set; }
        public string ArchetypeCode { get; set; }
        public Nullable<System.Guid> CurrProcItemID { get; set; }
        public Nullable<System.Guid> LastProcItemID { get; set; }
        public Nullable<System.Guid> OrigProcItemID { get; set; }
        public Nullable<byte> HasAttachments { get; set; }
        public Nullable<System.DateTime> TimeStamp { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<BalHistMetricRun> BalHistMetricRuns { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<BalMetricRunChild> BalMetricRunChilds { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<MxAAGBalancing> MxAAGBalancings { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<MxAAGBalancing> MxAAGBalancings1 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<MxAAGBalancing> MxAAGBalancings2 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<MxAAGBalancing> MxAAGBalancings3 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<MxAAGBalancing> MxAAGBalancings4 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<MxAAGBalancingRun> MxAAGBalancingRuns { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<MxAAGBalancingRun> MxAAGBalancingRuns1 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<MxAAGBalancingRun> MxAAGBalancingRuns2 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<MxAAGBalancingRun> MxAAGBalancingRuns3 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<MxAAGBalancingRun> MxAAGBalancingRuns4 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<MxApBalancingRun> MxApBalancingRuns { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<MxArBalancingRun> MxArBalancingRuns { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<MxTrustBalancingRun> MxTrustBalancingRuns { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<MxWipBalancingRun> MxWipBalancingRuns { get; set; }
        public virtual NxMetric NxMetric { get; set; }
    }
}
